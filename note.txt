C++ 的 traits 技术，是一种约定俗称的技术方案. 
traits 技术的关键在于，使用另外的模板类 type_traits 来保存不同数据类型的 type，这样就可以兼容自定义数据类型和内置数据类型

1. integral_constant 
这个类是所有traits类的基类，分别提供了以下功能：
value_type 表示值的类型;
value表示值;
type 表示自己, 因此可以用::type::value来获取值;
true_type和false_type两个特化类用来表示bool值类型的traits，很多traits类都需要继承它们.

2. https://blog.csdn.net/weixin_46412362/article/details/117755100 iterator_traits

3. https://en.cppreference.com/w/cpp/types/enable_if
enable_if的出现使得SFINAE使用上更加方便，进一步扩展了上面has_xxx is_xxx的作用。

而enable_if实现上也是使用了SFINAE。
4. https://en.cppreference.com/w/cpp/language/sfinae

SFINAE是C++模板编译的一个原则，全名叫做Substitution Failure Is Not An Error

C++编译过程中，如果模板实例化后的某个模板函数（模板类）对该调用无效，那么将继续寻找其他重载决议，而不是引发一个编译错误。

5. https://leezw.net/assets/pdf/STL%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90.pdf

6. rb-tree is a container but is private


